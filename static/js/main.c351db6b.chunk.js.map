{"version":3,"sources":["Components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timer","runInterval","setState","console","info","toUTCString","slice","this","window","setInterval","prevProps","debug","name","props","clearInterval","className","React","Component","App","hasClock","clockName","timerName","getRandomName","value","now","toString","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,MAAQ,EALV,EAoBEC,YAAc,WACZ,IAAMH,EAAO,IAAIC,KAEjB,EAAKG,SAAS,CAAEJ,SAEhBK,QAAQC,KAAKN,EAAKO,cAAcC,OAAO,IAAK,KAzBhD,uDAOE,WACEC,KAAKP,MAAQQ,OAAOC,YAAYF,KAAKN,YAAa,OARtD,gCAWE,SAAmBS,GAEjBP,QAAQQ,MAAR,uBAA8BD,EAAUE,KAAxC,eAAmDL,KAAKM,MAAMD,SAblE,kCAgBE,WACEE,cAAcP,KAAKP,SAjBvB,oBA4BE,WACE,OACE,sBAAKe,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGR,KAAKM,MAAMD,OAEb,YACD,sBAAMG,UAAU,cAAhB,SACGR,KAAKV,MAAMC,KAAKO,cAAcC,OAAO,IAAK,YApCrD,GAA2BU,IAAMC,WCDpBC,EAAb,4MACErB,MAAQ,CACNsB,UAAU,EACVC,UAAW,WAHf,EAMEC,UAAY,EANd,EA+BEC,cAAgB,WACd,IAAMC,EAAQxB,KAAKyB,MAAMC,WAAWnB,OAAO,GAE3C,MAAM,SAAN,OAAgBiB,IAlCpB,uDAQE,WAAqB,IAAD,OAClBhB,KAAKc,UAAYb,OAAOC,aAAY,WAClC,EAAKP,SAAS,CAAEkB,UAAU,GAAD,OAAK,EAAKE,qBAClC,MAEHI,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACF,EAAKhC,MAAMsB,UACb,EAAKjB,SAAS,CAAEiB,UAAU,OAI9BO,SAASC,iBAAiB,SAAS,WAC5B,EAAK9B,MAAMsB,UACd,EAAKjB,SAAS,CAAEiB,UAAU,SAtBlC,kCA2BE,WACEL,cAAcP,KAAKc,aA5BvB,oBAqCE,WACE,MAAgCd,KAAKV,MAA7BsB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKL,UAAU,MAAf,UACE,6CACCI,GAAY,cAAC,EAAD,CAAOP,KAAMQ,WA3ClC,GAAyBJ,IAAMC,WCN/Ba,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.c351db6b.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  date: Date,\n};\n\ntype Props = {\n  name: string,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timer = 0;\n\n  componentDidMount() {\n    this.timer = window.setInterval(this.runInterval, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    /* eslint-disable no-console */\n    console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  runInterval = () => {\n    const date = new Date();\n\n    this.setState({ date });\n    /* eslint-disable no-console */\n    console.info(date.toUTCString().slice(-12, -4));\n  };\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {this.state.date.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Components/Clock';\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends React.Component <{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerName = 0;\n\n  componentDidMount() {\n    this.timerName = window.setInterval(() => {\n      this.setState({ clockName: `${this.getRandomName()}` });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      if (this.state.hasClock) {\n        this.setState({ hasClock: false });\n      }\n    });\n\n    document.addEventListener('click', () => {\n      if (!this.state.hasClock) {\n        this.setState({ hasClock: true });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerName);\n  }\n\n  getRandomName = () => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}